% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fsom.clustering.R
\name{fsom.clustering}
\alias{fsom.clustering}
\title{fsom.clustering}
\usage{
fsom.clustering(fcs.SCE, assay.i = "normalized",
  markers.to.use = "all", markers.to.plot = NULL,
  k.metaclustering = 40, metaclustering.name = NULL)
}
\arguments{
\item{fcs.SCE}{A \code{fcs.SCE} object generated through \code{\link[FlowCT]{fcs.SCE()}}.}

\item{assay.i}{Name of matrix stored in the \code{fcs.SCE} object from which calculate SOM clustering. Default = \code{"normalized"}.}

\item{markers.to.use}{Markers used for the clustering calculation. Default = \code{"all"}.}

\item{markers.to.plot}{Markers to plot in the final minimum spanning tree (MST). Posible values are \code{NULL} (no plotting), \code{"tree"} (plotting a general MST with all identified clusters), \code{"tree_metaclustering"} (plotting a general MST but colored by metaclustering results) or a vector with markers (and it draws multiple MSTs for each marker indicated).}

\item{k.metaclustering}{Number of metaclusters to calculate in the metaclustering step. Default = \code{40}.}

\item{metaclustering.name}{Name for PDF with metaclustering results (see \href{https://bioconductor.org/packages/release/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf}{\code{ConsensusClusterPlus} package} for interpretation help). Default = \code{NULL}.}
}
\description{
This function calculates a Self-Organizing Map (SOM) clustering and a simultaneous metaclustering from a \code{fcs.SCE} object. For additional information go to \href{https://github.com/SofieVG/FlowSOM}{\code{FlowSOM} package}.
}
\examples{
\dontrun{
fsom <- fsom.clustering(fcs.SCE = fcs, markers.to.use = c("CD8", "CD27", "CCR4", "CD45RA", "CD4"), k.metaclustering = 20)
fcs$SOM <- fsom$metaclusters #add SOM information to colData(fcs) as a new column
}
}
\keyword{MST}
\keyword{SOM}
\keyword{clustering}
\keyword{metaclustering}
\keyword{minimum}
\keyword{spanning}
\keyword{tree}
