% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{barplot.cell.pops}
\alias{barplot.cell.pops}
\title{barplot.cell.pops}
\usage{
\method{barplot}{cell.pops}(fcs.SE, assay.i = "normalized",
  cell.clusters, plot = T, count.by, facet.by = NULL,
  return.mode = "percentage")
}
\arguments{
\item{fcs.SE}{A FCS.SE object generated through \code{\link[FlowCT:fcs.SE]{FlowCT::fcs.SE()}}.}

\item{assay.i}{Name of matrix stored in the \code{FCS.SE} object from which calculate correlation. Default = \code{"normalized"}.}

\item{cell.clusters}{A vector with clusters identified through \code{\link[FlowCT:fsom.clustering]{FlowCT::fsom.clustering()}} (and, normaly, later renamed).}

\item{plot}{Logical indicating whether plotting stacked barplot. Default = \code{TRUE}.}

\item{count.by}{Variable name (from \code{colData(fcs.SE)}) for calculating proportions (or counts) and drawing the x-axis in the stacked bar plotting.}

\item{facet.by}{Variable name (from \code{colData(fcs.SE)}) for splitting the stacked bar plotting. Default = \code{NULL}.}

\item{return.mode}{String for specifying if final resuls should be proportions ("percentage", default) or raw counts ("counts").}
}
\description{
This function calculates cluster proportions (or raw counts) for each identified cluster and plot them on a stacked barplot.
}
\examples{
\dontrun{
prop_table <- barplot.cell.pops(fcs.SE = fcs_se, cell.clusters = fcs_se$SOM_named, 
    count.by = "sample_id", facet.by = "condition", 
    return.mode = "percentage")
counts_table <- barplot.cell.pops(fcs.SE = fcs_se, cell.clusters = fcs_se$SOM_named, 
    count.by = "condition", return.mode = "counts")
}
}
\keyword{barplot}
\keyword{proportions}
